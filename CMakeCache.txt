# This is the CMakeCache file.
# For build in directory: d:/OPENVINO/openvino
# It was generated by CMake: C:/Users/viswa/AppData/Local/Programs/Python/Python310/Lib/site-packages/cmake/data/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Abseil protogate CXX standard to dependent targets
ABSL_PROPAGATE_CXX_STD:BOOL=ON

//enables rdpms counter to report precise cpu frequency in benchdnn.
//\n    CAUTION: may not work on all cpus (hence disabled by default)
BENCHDNN_USE_RDPMC:BOOL=OFF

//Build Python binaries
BUILD_ONNX_PYTHON:BOOL=OFF

//Build as a shared library
BUILD_SHARED_LIBS:BOOL=ON

//Build template extra module
BUILD_template:BOOL=ON

//Build template_extension extra module
BUILD_template_extension:BOOL=ON

//Path to a file.
CL2_HPP_INCLUDE_DIR:PATH=CL2_HPP_INCLUDE_DIR-NOTFOUND

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/lib.exe

//ASM compiler
CMAKE_ASM_COMPILER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/cl.exe

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=

//ASM_MASM compiler
CMAKE_ASM_MASM_COMPILER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/ml64.exe

//Flags used by the ASM_MASM compiler during all build types.
CMAKE_ASM_MASM_FLAGS:STRING=

//Flags used by the ASM_MASM compiler during DEBUG builds.
CMAKE_ASM_MASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM_MASM compiler during MINSIZEREL builds.
CMAKE_ASM_MASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM_MASM compiler during RELEASE builds.
CMAKE_ASM_MASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM_MASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO:STRING=

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:UNINITIALIZED=Release

//Enable warnings as errors
CMAKE_COMPILE_WARNING_AS_ERROR:BOOL=OFF

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the C++ compiler during RelWithAssert builds.
CMAKE_CXX_FLAGS_RELWITHASSERT:STRING='/O2 /Ob2   /sdl /guard:cf /wd4996 '

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Flags used by the C++ compiler during RelWithMdd build.
CMAKE_CXX_FLAGS_RELWITHMDD:STRING='/O2 /Ob2 /D_DEBUG  /sdl /guard:cf /wd4996 '

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RelWithAssert builds.
CMAKE_C_FLAGS_RELWITHASSERT:STRING='/O2 /Ob2   /sdl /guard:cf /wd4996 '

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Flags used by the C compiler during RelWithMdd build
CMAKE_C_FLAGS_RELWITHMDD:STRING='/O2 /Ob2 /D_DEBUG  /sdl /guard:cf /wd4996 '

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used for linking binaries during RelWithAssert builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHASSERT:STRING='/INCREMENTAL:NO '

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Flags used for linking binaries during RelWithMdd builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHMDD:STRING='/INCREMENTAL:NO '

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=D:/OPENVINO/openvino/CMakeFiles/pkgRedirects

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Directory relative to CMAKE_INSTALL to install the cmake configuration
// files
CMAKE_INSTALL_CMAKEDIR:STRING=cmake

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//Directory relative to CMAKE_INSTALL_DATA to install examples
CMAKE_INSTALL_EXAMPLEDIR:STRING=examples

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/OpenVINO

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=CMAKE_MT-NOTFOUND

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=OpenVINO toolkit

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=OpenVINO

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=6.69

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=6

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=69

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the shared libraries linker during RelWithAssert
// builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHASSERT:STRING='/INCREMENTAL:NO '

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Flags used by the shared libraries linker during RelWithMdd builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHMDD:STRING='/INCREMENTAL:NO '

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Don't warn about obsolete cmake versions in 3rdparty
CMAKE_WARN_DEPRECATED:BOOL=OFF

//Warn about absolute paths in destination
CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION:BOOL=ON

//Cpack generator for OpenVINO
CPACK_GENERATOR:STRING=TGZ

//Enable to build 7-Zip source packages
CPACK_SOURCE_7Z:BOOL=ON

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=ON

//Path to a program.
CYGWIN_BAT:FILEPATH=CYGWIN_BAT-NOTFOUND

//specifies compiler optimization flags (see below for more information).
//\n    If empty default optimization level would be applied which
// depends on the
//\n    compiler being used.
//\n
//\n    - For Intel C++ Compilers the default option is `-xSSE4.1`
// which instructs
//\n      the compiler to generate the code for the processors that
// support SSE4.1
//\n      instructions. This option would not allow to run the library
// on older
//\n      architectures.
//\n
//\n    - For GNU* Compiler Collection and Clang, the default option
// is `-msse4.1` which
//\n      behaves similarly to the description above.
//\n
//\n    - For Clang and GCC compilers on RISC-V architecture this
// option accepts `-march=<ISA-string>` flag
//\n      to control wthether or not oneDNN should be compiled with
// RVV Intrinsics. Use this option with
//\n      `-march=rv64gc` or `-march=rv64gcv` value to compile oneDNN
// with and without RVV Intrinsics respectively.
//\n      If the option is not provided, CMake will decide based
// on the active toolchain and compiler flags.
//\n
//\n    - For all other cases there are no special optimizations
// flags.
//\n
//\n    If the library is to be built for generic architecture (e.g.
// built by a
//\n    Linux distributive maintainer) one may want to specify DNNL_ARCH_OPT_FLAGS=""
//\n    to not use any host specific instructions
DNNL_ARCH_OPT_FLAGS:STRING=HostOpts

DNNL_BLAS_VENDOR:STRING=NONE

//builds examples
DNNL_BUILD_EXAMPLES:BOOL=OFF

//specifies whether oneDNN library will use special testing environment
// for
//\n    internal testing processes
DNNL_BUILD_FOR_CI:BOOL=OFF

//builds tests
DNNL_BUILD_TESTS:BOOL=OFF

//specifies which supported tool for code coverage will be used
//\n    Currently only gcov supported
DNNL_CODE_COVERAGE:STRING=OFF

DNNL_CPU_RUNTIME:STRING=TBB

//specifies host compiler for Intel oneAPI DPC++ Compiler
DNNL_DPCPP_HOST_COMPILER:STRING=DEFAULT

//disables sharing a common scratchpad between primitives.
//\n    This option must be turned ON if there is a possibility
// of executing
//\n    distinct primitives concurrently.
//\n    CAUTION: enabling this option increases memory consumption.
DNNL_ENABLE_CONCURRENT_EXEC:BOOL=ON

//enables control of CPU ISA specific hints by oneDNN via DNNL_CPU_ISA_HINTS
//\n    environment variable and dnnl_set_cpu_isa_hints() function
DNNL_ENABLE_CPU_ISA_HINTS:BOOL=ON

//Enable ITT Tasks tagging feature and tag all primitive execution
// 
//\n    (on by default). VTune Profiler can group profiling results
// based 
//\n    on those ITT tasks and show corresponding timeline information.
DNNL_ENABLE_ITT_TASKS:BOOL=OFF

//Enable registration of oneDNN kernels that are generated at
//\n    runtime with VTune Profiler (on by default). Without the
//\n    registrations, VTune Profiler would report data collected
// inside
//\n    the kernels as `outside any known module`.
DNNL_ENABLE_JIT_PROFILING:BOOL=ON

//enables control of CPU ISA detected by oneDNN via DNNL_MAX_CPU_ISA
//\n    environment variable and dnnl_set_max_cpu_isa() function
DNNL_ENABLE_MAX_CPU_ISA:BOOL=ON

//enables memory-related debug functionality,
//\n    such as buffer overflow (default) and underflow, using gtests
// and benchdnn.
//\n    Additionaly, this option enables testing of out-of-memory
// handling by the
//\n    library, such as failed memory allocations, using primitive-related
// gtests.
//\n    This feature is experimental and is only available on Linux.
DNNL_ENABLE_MEM_DEBUG:BOOL=OFF

DNNL_ENABLE_PRIMITIVE:STRING=CONVOLUTION;DECONVOLUTION;CONCAT;LRN;INNER_PRODUCT;MATMUL;POOLING;REDUCTION;REORDER;RNN;SOFTMAX

//enables primitive cache.
DNNL_ENABLE_PRIMITIVE_CACHE:BOOL=ON

//Specifies a set of implementations using specific CPU ISA to
// be available
//\n    at build time. Regardless of value chosen, compiler-based
// optimized
//\n    implementations will always be available. Valid values:
//\n    - ALL (the default). Includes all ISA to be enabled.
//\n    - <ISA_NAME>. Includes selected and all "less" ISA to be
// enabled.
//\n      Possible values are: SSE41, AVX2, AVX512, AMX. The linear
// order is
//\n      SSE41 < AVX2 < AVX512 < AMX. It means that if user selects,
// e.g. AVX2 ISA,
//\n      SSE41 implementations will also be available at build
// time.
DNNL_ENABLE_PRIMITIVE_CPU_ISA:STRING=ALL

//Specifies a set of implementations using specific GPU ISA to
// be available
//\n    at build time. Regardless of value chosen, reference OpenCL-based
//\n    implementations will always be available. Valid values:
//\n    - ALL (the default). Includes all ISA to be enabled.
//\n    - <ISA_NAME>;<ISA_NAME>;... Includes only selected ISA to
// be enabled.
//\n      Possible values are: GEN9, GEN11, XELP, XEHP, XEHPG, XEHPC.
DNNL_ENABLE_PRIMITIVE_GPU_ISA:STRING=ALL

//enables stack checker that can be used to get
//\n    information about stack consumption for a particular library
// entry point.
//\n    This feature is only available on Linux (see src/common/stack_checker.hpp
//\n    for more details).
//\n    Note: This option requires enabling concurrent scratchpad
//\n    (DNNL_ENABLE_CONCURRENT_EXEC).
DNNL_ENABLE_STACK_CHECKER:BOOL=OFF

DNNL_ENABLE_WORKLOAD:STRING=INFERENCE

//Enables experimental features in oneDNN.
//\n    When enabled, each experimental feature has to be individually
// selected
//\n    using environment variables.
DNNL_EXPERIMENTAL:BOOL=OFF

//Enable experimental profiling capabilities. This option works
// independently
//\n    from DNNL_EXPERIMENTAL.
DNNL_EXPERIMENTAL_PROFILING:BOOL=OFF

//Enable experimental functionality for sparse domain. This option
// works
//\n    independetly from DNNL_EXPERIMENTAL.
DNNL_EXPERIMENTAL_SPARSE:BOOL=OFF

//Name of oneDNN library for Intel GPU Plugin
DNNL_GPU_LIBRARY_NAME:STRING=openvino_onednn_gpu

DNNL_GPU_RUNTIME:STRING=NONE

//specifies target GPU vendor for GPU engines.
//\n    Can be INTEL (default) or NVIDIA.
DNNL_GPU_VENDOR:STRING=NVIDIA

//specifies installation mode; supports DEFAULT, BUNDLE and BUNDLE_V2.
//\n
//\n    When BUNDLE or BUNDLE_V2 option is set oneDNN will be installed
// as a bundle
//\n    which contains examples and benchdnn. The difference between
// BUNDLE and
//\n    BUNDLE_V2 is in the directory layout.
DNNL_INSTALL_MODE:STRING=DEFAULT

DNNL_LIBRARY_NAME:STRING=openvino_onednn_cpu

DNNL_LIBRARY_TYPE:STRING=STATIC

DNNL_TARGET_ARCH:STRING=X64

//specifies testing targets coverage. Supports SMOKE, CI, CI_NO_CORR,
//\n    NIGHTLY.
//\n
//\n    When SMOKE option is set, it enables a subset of test targets
// which verify
//\n        that basic library functionality works as expected.
//\n    When CI option is set, it enables a subset of test targets
// to run.
//\n    When CI_NO_CORR option is set, it enables same coverage
// as for CI option,
//\n        but switches off correctness validation for benchdnn
// targets.
//\n    When NIGHTLY option is set, it enables a broader set of
// test targets to
//\n        run.
DNNL_TEST_SET:STRING=CI

//Enables use of ARM optimised functions
//\n    from Arm Compute Library.
//\n    This is only supported on AArch64 builds and assumes there
// is a
//\n    functioning Compute Library build available at the location
// specified by the
//\n    environment variable ACL_ROOT_DIR.
DNNL_USE_ACL:BOOL=OFF

//instructs build system to use a Clang sanitizer. Possible values:
//\n    Address: enables AddressSanitizer
//\n    Leak: enables LeakSanitizer
//\n    Memory: enables MemorySanitizer
//\n    MemoryWithOrigin: enables MemorySanitizer with origin tracking
//\n    Thread: enables ThreadSanitizer
//\n    Undefined: enables UndefinedBehaviourSanitizer
//\n    This feature is experimental and is only available on Linux.
DNNL_USE_CLANG_SANITIZER:STRING=

//Instructs build system to use clang-tidy. Valid values:
//\n    - NONE (default)
//\n      Clang-tidy is disabled.
//\n    - CHECK
//\n      Enables checks from .clang-tidy.
//\n    - FIX
//\n      Enables checks from .clang-tidy and fix found issues.
//\n    This feature is only available on Linux.
DNNL_USE_CLANG_TIDY:STRING=NONE

//allows oneDNN be verbose whenever ONEDNN_VERBOSE
//\n    environment variable set to 1
DNNL_VERBOSE:BOOL=ON

//treat warnings as errors
DNNL_WERROR:BOOL=OFF

//Enables XBYAK_NO_EXCEPTION
DNNL_XBYAK_NO_EXCEPTION:BOOL=ON

//Path to a program.
DOXYREST_EXECUTABLE:FILEPATH=DOXYREST_EXECUTABLE-NOTFOUND

//Enable ARM Compute build via cmake
ENABLE_ARM_COMPUTE_CMAKE:BOOL=OFF

//Enables AUTO Device Plugin
ENABLE_AUTO:BOOL=ON

//Enables Auto-Batching Plugin
ENABLE_AUTO_BATCH:BOOL=ON

//Enable AVX2 optimizations
ENABLE_AVX2:BOOL=ON

//Enable AVX512 optimizations
ENABLE_AVX512F:BOOL=ON

//Enable clang-format checks during the build
ENABLE_CLANG_FORMAT:BOOL=OFF

//Enable cpplint checks during the build
ENABLE_CPPLINT:BOOL=OFF

//Build with C/C++ API.
ENABLE_CPP_API:BOOL=OFF

//enable OpenVINO debug capabilities at runtime
ENABLE_DEBUG_CAPS:BOOL=OFF

//Build docs using Doxygen
ENABLE_DOCS:BOOL=OFF

//Enable build features (PCH, UNITY) to speed up build time
ENABLE_FASTER_BUILD:BOOL=OFF

//instrument build for fuzzing
ENABLE_FUZZING:BOOL=OFF

//Enables Hetero Device Plugin
ENABLE_HETERO:BOOL=ON

//CPU plugin for OpenVINO Runtime
ENABLE_INTEL_CPU:BOOL=ON

//GPU OpenCL-based plugin for OpenVINO Runtime
ENABLE_INTEL_GPU:BOOL=ON

//Enables JS API building
ENABLE_JS:BOOL=ON

//Enable MLAS for OpenVINO CPU Plugin
ENABLE_MLAS_FOR_CPU:BOOL=ON

//Enables MULTI Device Plugin
ENABLE_MULTI:BOOL=ON

//Enable ncc style check
ENABLE_NCC_STYLE:BOOL=OFF

//Build with openvino notebooks.
ENABLE_NOTEBOOKS:BOOL=OFF

//Build with open_model_zoo.
ENABLE_OMZ:BOOL=OFF

//Enable oneDNN with GPU support
ENABLE_ONEDNN_FOR_GPU:BOOL=ON

//Enable building cllayerinfo tool
ENABLE_OPENCL_LAYERINFO:BOOL=ON

//Enable OpenCL Layers
ENABLE_OPENCL_LAYERS:BOOL=ON

//Enable output for OPENVINO_DEBUG statements
ENABLE_OPENVINO_DEBUG:BOOL=OFF

//Build with ovms.
ENABLE_OVMS:BOOL=OFF

//Enable IR FrontEnd
ENABLE_OV_IR_FRONTEND:BOOL=ON

//Enable ONNX FrontEnd
ENABLE_OV_ONNX_FRONTEND:BOOL=ON

//Enable PaddlePaddle FrontEnd
ENABLE_OV_PADDLE_FRONTEND:BOOL=ON

//Enable PyTorch FrontEnd
ENABLE_OV_PYTORCH_FRONTEND:BOOL=ON

//Enable TensorFlow FrontEnd
ENABLE_OV_TF_FRONTEND:BOOL=ON

//Enable TensorFlow Lite FrontEnd
ENABLE_OV_TF_LITE_FRONTEND:BOOL=ON

//Generate plugins.xml configuration file or not
ENABLE_PLUGINS_XML:BOOL=OFF

//Enable or disable ITT counter groups.Supported values: ALL -
// enable all ITT counters (default value) FIRST_INFERENCE - enable
// only first inference time counters
ENABLE_PROFILING_FILTER:STRING=ALL

//Build with ITT tracing of first inference time.
ENABLE_PROFILING_FIRST_INFERENCE:BOOL=ON

//Build with ITT tracing. Optionally configure pre-built ittnotify
// library though INTEL_VTUNE_DIR variable.
ENABLE_PROFILING_ITT:BOOL=OFF

//Proxy plugin for OpenVINO Runtime
ENABLE_PROXY:BOOL=ON

//Enables OpenVINO Python API build
ENABLE_PYTHON:BOOL=ON

//Build with Python API.
ENABLE_PYTHON_API:BOOL=OFF

//console samples are part of OpenVINO Runtime package
ENABLE_SAMPLES:BOOL=ON

//enable checking memory errors via AddressSanitizer
ENABLE_SANITIZER:BOOL=OFF

//Enables compression support for TF FE
ENABLE_SNAPPY_COMPRESSION:BOOL=ON

//Enable SSE4.2 optimizations
ENABLE_SSE42:BOOL=ON

//Enables use of system flatbuffers
ENABLE_SYSTEM_FLATBUFFERS:BOOL=ON

//Enables use of system OpenCL
ENABLE_SYSTEM_OPENCL:BOOL=OFF

//Enables use of system Protobuf
ENABLE_SYSTEM_PROTOBUF:BOOL=OFF

//Enables use of system PugiXML
ENABLE_SYSTEM_PUGIXML:BOOL=OFF

//Enables use of system version of Snappy
ENABLE_SYSTEM_SNAPPY:BOOL=OFF

//Enables use of system TBB
ENABLE_SYSTEM_TBB:BOOL=OFF

//Enable TBBBind_2_5 static usage in OpenVINO runtime
ENABLE_TBBBIND_2_5:BOOL=ON

//Enable template plugin
ENABLE_TEMPLATE:BOOL=ON

//Enables registration of TEMPLATE plugin
ENABLE_TEMPLATE_REGISTRATION:BOOL=OFF

//unit, behavior and functional tests
ENABLE_TESTS:BOOL=OFF

//enable checking data races via ThreadSanitizer
ENABLE_THREAD_SANITIZER:BOOL=OFF

//enable UndefinedBahavior sanitizer
ENABLE_UB_SANITIZER:BOOL=OFF

//skip check for MD5 for dependency
ENABLE_UNSAFE_LOCATIONS:BOOL=OFF

//Build wheel packages for PyPI
ENABLE_WHEEL:BOOL=OFF

//Directory under which to collect all populated content
FETCHCONTENT_BASE_DIR:PATH=D:/OPENVINO/openvino/_deps

//Disables all attempts to download or update content and assumes
// source dirs already exist
FETCHCONTENT_FULLY_DISCONNECTED:BOOL=OFF

//Enables QUIET option for all content population
FETCHCONTENT_QUIET:BOOL=ON

//When not empty, overrides where to find pre-populated content
// for node-addon-api
FETCHCONTENT_SOURCE_DIR_NODE-ADDON-API:PATH=

//When not empty, overrides where to find pre-populated content
// for node-api-headers
FETCHCONTENT_SOURCE_DIR_NODE-API-HEADERS:PATH=

//Enables UPDATE_DISCONNECTED behavior for all content population
FETCHCONTENT_UPDATES_DISCONNECTED:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of node-addon-api
FETCHCONTENT_UPDATES_DISCONNECTED_NODE-ADDON-API:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of node-api-headers
FETCHCONTENT_UPDATES_DISCONNECTED_NODE-API-HEADERS:BOOL=OFF

//Enable the build of flatbenchmark.
FLATBUFFERS_BUILD_BENCHMARKS:BOOL=OFF

//Enable the build of c++17 test target. "
//\n       Requirements: Clang6, GCC7, MSVC2017 (_MSC_VER >= 1914)
//  or higher.
FLATBUFFERS_BUILD_CPP17:BOOL=OFF

//Enable the build of the flatbuffers compiler
FLATBUFFERS_BUILD_FLATC:BOOL=ON

//Enable the build of flathash
FLATBUFFERS_BUILD_FLATHASH:BOOL=OFF

//Enable the build of the flatbuffers library
FLATBUFFERS_BUILD_FLATLIB:BOOL=OFF

//Enable the build of grpctest
FLATBUFFERS_BUILD_GRPCTEST:BOOL=OFF

//Run C++ code generator with '--cpp-std c++0x' switch.
FLATBUFFERS_BUILD_LEGACY:BOOL=OFF

//Enable the build of the flatbuffers shared library
FLATBUFFERS_BUILD_SHAREDLIB:BOOL=OFF

//Enable the build of tests and samples.
FLATBUFFERS_BUILD_TESTS:BOOL=OFF

//Enable the code coverage build option.
FLATBUFFERS_CODE_COVERAGE:BOOL=OFF

//Add '-fsanitize' flags to 'flattests' and 'flatc' targets.
FLATBUFFERS_CODE_SANITIZE:BOOL=OFF

//Enable precompile headers support for 'flatbuffers' and 'flatc'.
// "
//\n        Only work if CMake supports 'target_precompile_headers'.
// "
//\n        This can speed up compilation time.
FLATBUFFERS_ENABLE_PCH:BOOL=OFF

//Enable the installation of targets.
FLATBUFFERS_INSTALL:BOOL=OFF

//Force libc++ when using Clang
FLATBUFFERS_LIBCXX_WITH_CLANG:BOOL=ON

//Build an deb using the 'package' target.
FLATBUFFERS_PACKAGE_DEBIAN:BOOL=OFF

//Build an rpm using the 'package' target.
FLATBUFFERS_PACKAGE_REDHAT:BOOL=OFF

//Skip generating monster_extra.fbs that contains non-supported
// numerical"
//\n      types.
FLATBUFFERS_SKIP_MONSTER_EXTRA:BOOL=OFF

//Build flatbuffers compiler with -static flag
FLATBUFFERS_STATIC_FLATC:BOOL=OFF

//Build flatbuffers with all warnings as errors (-Werror or /WX).
FLATBUFFERS_STRICT_MODE:BOOL=OFF

//Value Computed by CMake
FlatBuffers_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/flatbuffers/flatbuffers

//Value Computed by CMake
FlatBuffers_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
FlatBuffers_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/flatbuffers/flatbuffers

//The directory containing a CMake configuration file for Flatbuffers.
Flatbuffers_DIR:PATH=Flatbuffers_DIR-NOTFOUND

//Path to a program.
GIT:FILEPATH=C:/Program Files/Git/cmd/git.exe

//Git command line client
GIT_EXECUTABLE:FILEPATH=C:/Program Files/Git/cmd/git.exe

//Path to hwloc.dll
HWLOC_DLL:FILEPATH=HWLOC_DLL-NOTFOUND

//Target version of OpenCL which should be used by GPU plugin
INTEL_GPU_TARGET_OCL_VERSION:STRING=200

//Build the unit tests when BUILD_TESTING is enabled.
JSON_BuildTests:BOOL=OFF

//Enable CI build targets.
JSON_CI:BOOL=OFF

//Use extended diagnostic messages.
JSON_Diagnostics:BOOL=OFF

//Disable default integer enum serialization.
JSON_DisableEnumSerialization:BOOL=OFF

//Place use-defined string literals in the global namespace.
JSON_GlobalUDLs:BOOL=ON

//Enable implicit conversions.
JSON_ImplicitConversions:BOOL=ON

//Install CMake targets during install step.
JSON_Install:BOOL=OFF

//Enable legacy discarded value comparison.
JSON_LegacyDiscardedValueComparison:BOOL=OFF

//Use non-amalgamated version of the library.
JSON_MultipleHeaders:BOOL=ON

//Include as system headers (skip for clang-tidy).
JSON_SystemInclude:BOOL=ON

//Path to a program.
MSYS_CMD:FILEPATH=MSYS_CMD-NOTFOUND

//ApiValidator for OneCore compliance
ONECORE_API_VALIDATOR:FILEPATH=ONECORE_API_VALIDATOR-NOTFOUND

//builds graph component
ONEDNN_BUILD_GRAPH:BOOL=OFF

//enables control of dumping graph artifacts via
//\n    ONEDNN_GRAPH_DUMP environment variable. The option and feature
// are valid only
//\n    when ONEDNN_BUILD_GRAPH is ON
ONEDNN_ENABLE_GRAPH_DUMP:BOOL=OFF

//builds oneDNN Graph API graph-compiler backend
ONEDNN_EXPERIMENTAL_GRAPH_COMPILER_BACKEND:BOOL=OFF

//the optional JIT backends for graph-compiler: llvm;c;builtin
ONEDNN_EXPERIMENTAL_GRAPH_COMPILER_CPU_JIT:STRING=builtin

//graph-compiler's llvm-config path
ONEDNN_EXPERIMENTAL_GRAPH_COMPILER_CPU_LLVM_CONFIG:STRING=AUTO

//Path to oneDNN GPU library
ONEDNN_GPU_LIB_PATH:FILEPATH=D:/OPENVINO/openvino/src/plugins/intel_gpu/thirdparty/onednn_gpu_install/lib/openvino_onednn_gpu.lib

//Installation path for oneDNN GPU library
ONEDNN_INSTALL_DIR:PATH=D:/OPENVINO/openvino/src/plugins/intel_gpu/thirdparty/onednn_gpu_install

ONEDNN_TARGET_ARCH:STRING=X64

//Build ONNX micro-benchmarks
ONNX_BUILD_BENCHMARKS:BOOL=OFF

//Build ONNX C++ APIs Tests
ONNX_BUILD_TESTS:BOOL=OFF

//Build with coverage instrumentation
ONNX_COVERAGE:BOOL=OFF

//The directory containing a CMake configuration file for ONNX.
ONNX_DIR:PATH=ONNX_DIR-NOTFOUND

//Disable exception handling.
ONNX_DISABLE_EXCEPTIONS:BOOL=OFF

//Disable static registration for onnx operator schemas.
ONNX_DISABLE_STATIC_REGISTRATION:BOOL=OFF

//Generate protobuf python type stubs
ONNX_GEN_PB_TYPE_STUBS:BOOL=ON

//Use ONNX ML
ONNX_ML:BOOL=ON

//Use lite protobuf instead of full.
ONNX_USE_LITE_PROTO:BOOL=ON

//Build ONNX using protobuf shared library. Sets PROTOBUF_USE_DLLS
// CMAKE Flag and Protobuf_USE_STATIC_LIBS. 
ONNX_USE_PROTOBUF_SHARED_LIBS:BOOL=OFF

//Generate code by proto3
ONNX_VERIFY_PROTO3:BOOL=OFF

//Build with Werror
ONNX_WERROR:BOOL=OFF

//path to Intel SDK for OpenCL applications.
//\n    Use this option to specify custom location for OpenCL.
OPENCLROOT:STRING=

//Build OpenCL ICD Loader as shared library
OPENCL_ICD_LOADER_BUILD_SHARED_LIBS:BOOL=ON

//Enable support for OpenCL ICD Loader testing.
OPENCL_ICD_LOADER_BUILD_TESTING:BOOL=OFF

//Path to OCL includes
OPENCL_ICD_LOADER_HEADERS_DIR:PATH=D:/OPENVINO/openvino/thirdparty/ocl/cl_headers

//Extra paths for extra modules to include into OpenVINO build
OPENVINO_EXTRA_MODULES:STRING=

//create OS dedicated folder in output
OS_FOLDER:BOOL=OFF

//Path to model server documentation dir.
OVMS_DOCS_DIR:PATH=

//Architecture for ARM ComputeLibrary
OV_CPU_ARM_TARGET_ARCH:STRING=

//Value Computed by CMake
OpenCL-ICD-Loader_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/ocl/icd_loader

//Value Computed by CMake
OpenCL-ICD-Loader_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
OpenCL-ICD-Loader_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/ocl/icd_loader

//Path to a file.
OpenCL_HPP_INCLUDE_DIR:PATH=OpenCL_HPP_INCLUDE_DIR-NOTFOUND

//Dependencies for the target
OpenCL_LIB_DEPENDS:STATIC=general;cfgmgr32.lib;general;runtimeobject.lib;

//The directory containing a CMake configuration file for OpenCV.
OpenCV_DIR:PATH=OpenCV_DIR-NOTFOUND

//Value Computed by CMake
OpenVINOBenchmarkTool_BINARY_DIR:STATIC=D:/OPENVINO/openvino/tools/benchmark_tool

//Value Computed by CMake
OpenVINOBenchmarkTool_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
OpenVINOBenchmarkTool_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/tools/benchmark_tool

//Value Computed by CMake
OpenVINOConverter_BINARY_DIR:STATIC=D:/OPENVINO/openvino/tools/ovc

//Value Computed by CMake
OpenVINOConverter_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
OpenVINOConverter_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/tools/ovc

//Value Computed by CMake
OpenVINODevPython_BINARY_DIR:STATIC=D:/OPENVINO/openvino/tools/openvino_dev

//Value Computed by CMake
OpenVINODevPython_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
OpenVINODevPython_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/tools/openvino_dev

//The directory containing a CMake configuration file for OpenVINODeveloperScripts.
OpenVINODeveloperScripts_DIR:PATH=D:/OPENVINO/openvino/cmake/developer_package

//Value Computed by CMake
OpenVINOPython_BINARY_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/python

//Value Computed by CMake
OpenVINOPython_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
OpenVINOPython_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/python

//Value Computed by CMake
OpenVINOTemplatePlugin_BINARY_DIR:STATIC=D:/OPENVINO/openvino/build-modules/template

//Value Computed by CMake
OpenVINOTemplatePlugin_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
OpenVINOTemplatePlugin_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/src/plugins/template

//Value Computed by CMake
OpenVINO_BINARY_DIR:STATIC=D:/OPENVINO/openvino

//Value Computed by CMake
OpenVINO_C_API_BINARY_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/c

//Value Computed by CMake
OpenVINO_C_API_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
OpenVINO_C_API_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/c

//The directory containing a CMake configuration file for OpenVINO.
OpenVINO_DIR:PATH=D:/OPENVINO/openvino

//Value Computed by CMake
OpenVINO_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
OpenVINO_JS_API_BINARY_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/js

//Value Computed by CMake
OpenVINO_JS_API_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
OpenVINO_JS_API_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/js

//Value Computed by CMake
OpenVINO_SOURCE_DIR:STATIC=D:/OPENVINO/openvino

//Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=PKG_CONFIG_EXECUTABLE-NOTFOUND

//Build defines for custom options
PUGIXML_BUILD_DEFINES:STRING=

//Enable compact mode
PUGIXML_COMPACT:BOOL=OFF

//Enable installation rules
PUGIXML_INSTALL:BOOL=OFF

//Disable Exceptions
PUGIXML_NO_EXCEPTIONS:BOOL=OFF

//Disable STL
PUGIXML_NO_STL:BOOL=OFF

//Disable XPath
PUGIXML_NO_XPATH:BOOL=OFF

//Use static MSVC RT libraries
PUGIXML_STATIC_CRT:BOOL=OFF

//Enable wchar_t mode
PUGIXML_WCHAR_MODE:BOOL=OFF

//Force new FindPython
PYBIND11_FINDPYTHON:BOOL=OFF

//Install pybind11 header files?
PYBIND11_INSTALL:BOOL=OFF

//Override the ABI version, may be used to enable the unstable
// ABI.
PYBIND11_INTERNALS_VERSION:STRING=

//Disable search for Python
PYBIND11_NOPYTHON:BOOL=OFF

//Use simpler GIL management logic that does not support disassociation
PYBIND11_SIMPLE_GIL_MANAGEMENT:BOOL=OFF

//Build pybind11 test suite?
PYBIND11_TEST:BOOL=OFF

//The directory containing a CMake configuration file for RapidJSON.
RapidJSON_DIR:PATH=RapidJSON_DIR-NOTFOUND

//Use OpenCL in benchmark_app
SAMPLES_ENABLE_OPENCL:BOOL=ON

//Enable OpenVINO conditional compilation or statistics collection.
// In case SELECTIVE_BUILD is enabled, the SELECTIVE_BUILD_STAT
// variable should contain the path to the collected IntelSEAPI
// statistics. Usage: -DSELECTIVE_BUILD=ON -DSELECTIVE_BUILD_STAT=/path/*.csv
SELECTIVE_BUILD:STRING=OFF

//Build Snappy for fuzzing.
SNAPPY_FUZZING_BUILD:BOOL=OFF

//Install Snappy's header and library
SNAPPY_INSTALL:BOOL=ON

//Target processors with AVX support.
SNAPPY_REQUIRE_AVX:BOOL=OFF

//Target processors with AVX2 support.
SNAPPY_REQUIRE_AVX2:BOOL=OFF

//Path to a program.
SPHINX_EXECUTABLE:FILEPATH=SPHINX_EXECUTABLE-NOTFOUND

//Value Computed by CMake
Samples_BINARY_DIR:STATIC=D:/OPENVINO/openvino/samples/c

//Value Computed by CMake
Samples_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
Samples_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/samples/c

//Value Computed by CMake
Snappy_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/snappy

//Value Computed by CMake
Snappy_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
Snappy_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/snappy

//Path to TBB root folder
TBBROOT:PATH=D:/OPENVINO/openvino/temp/tbb

//Path to TBB cmake folder
TBB_DIR:PATH=D:/OPENVINO/openvino/temp/tbb/lib/cmake/TBB

//TBB library install directory
TBB_LIB_INSTALL_DIR:PATH=runtime/3rdparty/tbb

//Path to temp directory
TEMP:PATH=D:/OPENVINO/openvino/temp

//Threading
THREADING:STRING=TBB

//Create dedicated sub-folder per build type for output binaries
USE_BUILD_TYPE_SUBFOLDER:BOOL=OFF

//Path to a program.
WGET_EXECUTABLE:FILEPATH=WGET_EXECUTABLE-NOTFOUND

//Build number of this release
WHEEL_BUILD:STRING=14272

//Version of this release
WHEEL_VERSION:STRING=2024.0.0

//specifies which threadpool implementation to use when
//\n    DNNL_CPU_RUNTIME=THREADPOOL is selected. Valid values: STANDALONE,
// EIGEN,
//\n    TBB
_DNNL_TEST_THREADPOOL_IMPL:STRING=STANDALONE

//Path to TBBBind 2.5+ library
_ov_tbbbind_2_5:FILEPATH=D:/OPENVINO/openvino/temp/tbb/bin/tbbbind_2_5.dll

//Value Computed by CMake
cnpy_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/cnpy

//Value Computed by CMake
cnpy_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
cnpy_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/cnpy

//Dependencies for the target
dnnl_LIB_DEPENDS:STATIC=general;TBB::tbb;

//Value Computed by CMake
gflags_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/gflags/gflags

//Value Computed by CMake
gflags_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
gflags_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/gflags/gflags

//Dependencies for the target
gflags_nothreads_static_LIB_DEPENDS:STATIC=general;shlwapi.lib;

//Dependencies for the target
ie_samples_utils_LIB_DEPENDS:STATIC=general;openvino::runtime;general;gflags;

//Value Computed by CMake
intel_cpu_thirdparty_BINARY_DIR:STATIC=D:/OPENVINO/openvino/src/plugins/intel_cpu/thirdparty

//Value Computed by CMake
intel_cpu_thirdparty_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
intel_cpu_thirdparty_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/src/plugins/intel_cpu/thirdparty

//Dependencies for the target
libprotoc_LIB_DEPENDS:STATIC=general;libprotobuf;

//Value Computed by CMake
mlas_BINARY_DIR:STATIC=D:/OPENVINO/openvino/src/plugins/intel_cpu/thirdparty/mlas

//Value Computed by CMake
mlas_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
mlas_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/src/plugins/intel_cpu/thirdparty/mlas

//Value Computed by CMake
nlohmann_json_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/json/nlohmann_json

//The directory containing a CMake configuration file for nlohmann_json.
nlohmann_json_DIR:PATH=nlohmann_json_DIR-NOTFOUND

//Value Computed by CMake
nlohmann_json_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
nlohmann_json_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/json/nlohmann_json

//Value Computed by CMake
oneDNN_BINARY_DIR:STATIC=D:/OPENVINO/openvino/src/plugins/intel_cpu/thirdparty/onednn

//Value Computed by CMake
oneDNN_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
oneDNN_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/src/plugins/intel_cpu/thirdparty/onednn

//Value Computed by CMake
onnx_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/onnx/onnx

//Value Computed by CMake
onnx_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
onnx_LIB_DEPENDS:STATIC=general;onnx_proto;

//Value Computed by CMake
onnx_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/onnx/onnx

//Dependencies for the target
onnx_proto_LIB_DEPENDS:STATIC=general;protobuf::libprotobuf-lite;

//Value Computed by CMake
opencv_c_wrapper_BINARY_DIR:STATIC=D:/OPENVINO/openvino/samples/c/common/opencv_c_wrapper

//Value Computed by CMake
opencv_c_wrapper_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
opencv_c_wrapper_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/samples/c/common/opencv_c_wrapper

//Value Computed by CMake
ov_node_addon_BINARY_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/js/node

//Value Computed by CMake
ov_node_addon_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
ov_node_addon_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/js/node

//Value Computed by CMake
protobuf_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/protobuf/protobuf/cmake

//Build conformance tests
protobuf_BUILD_CONFORMANCE:BOOL=OFF

//Build examples
protobuf_BUILD_EXAMPLES:BOOL=OFF

//Build libprotoc
protobuf_BUILD_LIBPROTOC:BOOL=OFF

//Build libprotoc and protoc compiler
protobuf_BUILD_PROTOC_BINARIES:BOOL=ON

//Build Shared Libraries
protobuf_BUILD_SHARED_LIBS:BOOL=OFF

//Build tests
protobuf_BUILD_TESTS:BOOL=OFF

//Default debug postfix
protobuf_DEBUG_POSTFIX:STRING=d

//Remove runtime type information in the binaries
protobuf_DISABLE_RTTI:BOOL=OFF

//Install protobuf binaries and files
protobuf_INSTALL:BOOL=ON

//Install the examples folder
protobuf_INSTALL_EXAMPLES:BOOL=OFF

//Value Computed by CMake
protobuf_IS_TOP_LEVEL:STATIC=OFF

//CMake built-in FindProtobuf.cmake module compatible
protobuf_MODULE_COMPATIBLE:BOOL=OFF

//Link static runtime libraries
protobuf_MSVC_STATIC_RUNTIME:BOOL=OFF

//Value Computed by CMake
protobuf_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/protobuf/protobuf/cmake

//Build with zlib support
protobuf_WITH_ZLIB:BOOL=OFF

//Value Computed by CMake
pugixml_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/pugixml

//Value Computed by CMake
pugixml_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
pugixml_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/pugixml

//Value Computed by CMake
pybind11_BINARY_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/python/thirdparty/pybind11

//The directory containing a CMake configuration file for pybind11.
pybind11_DIR:PATH=pybind11_DIR-NOTFOUND

//Value Computed by CMake
pybind11_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
pybind11_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/python/thirdparty/pybind11

//Value Computed by CMake
pyopenvino_BINARY_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/python/src/pyopenvino

//Value Computed by CMake
pyopenvino_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
pyopenvino_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/src/bindings/python/src/pyopenvino

//Path to shellcheck tool
shellcheck_PROGRAM:FILEPATH=shellcheck_PROGRAM-NOTFOUND

//Value Computed by CMake
xbyak_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/xbyak

//The directory containing a CMake configuration file for xbyak.
xbyak_DIR:PATH=xbyak_DIR-NOTFOUND

//Value Computed by CMake
xbyak_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
xbyak_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/xbyak

//Value Computed by CMake
zlib_BINARY_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/zlib

//Value Computed by CMake
zlib_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
zlib_SOURCE_DIR:STATIC=D:/OPENVINO/openvino/thirdparty/zlib


########################
# INTERNAL cache entries
########################

AUTO_AS_EXTENSION:INTERNAL=FALSE
AUTO_CONFIG:INTERNAL=
AUTO_PSEUDO_PLUGIN_FOR:INTERNAL=MULTI
BATCH_AS_EXTENSION:INTERNAL=FALSE
BATCH_CONFIG:INTERNAL=
BATCH_PSEUDO_PLUGIN_FOR:INTERNAL=
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_COMPILER
CMAKE_ASM_MASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_MASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS
CMAKE_ASM_MASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_DEBUG
CMAKE_ASM_MASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_MINSIZEREL
CMAKE_ASM_MASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_RELEASE
CMAKE_ASM_MASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=d:/OPENVINO/openvino
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=28
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Users/viswa/AppData/Local/Programs/Python/Python310/Lib/site-packages/cmake/data/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Users/viswa/AppData/Local/Programs/Python/Python310/Lib/site-packages/cmake/data/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Users/viswa/AppData/Local/Programs/Python/Python310/Lib/site-packages/cmake/data/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHASSERT
CMAKE_CXX_FLAGS_RELWITHASSERT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHMDD
CMAKE_CXX_FLAGS_RELWITHMDD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHASSERT
CMAKE_C_FLAGS_RELWITHASSERT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHMDD
CMAKE_C_FLAGS_RELWITHMDD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHASSERT
CMAKE_EXE_LINKER_FLAGS_RELWITHASSERT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHMDD
CMAKE_EXE_LINKER_FLAGS_RELWITHMDD-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 17 2022
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=D:/OPENVINO/openvino
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_CMAKEDIR
CMAKE_INSTALL_CMAKEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_EXAMPLEDIR
CMAKE_INSTALL_EXAMPLEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=114
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Users/viswa/AppData/Local/Programs/Python/Python310/Lib/site-packages/cmake/data/share/cmake-3.28
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHASSERT
CMAKE_SHARED_LINKER_FLAGS_RELWITHASSERT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHMDD
CMAKE_SHARED_LINKER_FLAGS_RELWITHMDD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Suppress errors that are meant for the author of the CMakeLists.txt
// files.
CMAKE_SUPPRESS_DEVELOPER_ERRORS:INTERNAL=TRUE
//Suppress Warnings that are meant for the author of the CMakeLists.txt
// files.
CMAKE_SUPPRESS_DEVELOPER_WARNINGS:INTERNAL=TRUE
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_7Z
CPACK_SOURCE_7Z-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
CPU_AS_EXTENSION:INTERNAL=TRUE
CPU_CONFIG:INTERNAL=
CPU_PSEUDO_PLUGIN_FOR:INTERNAL=
//ADVANCED property for variable: CYGWIN_BAT
CYGWIN_BAT-ADVANCED:INTERNAL=1
//STRINGS property for variable: ENABLE_PROFILING_FILTER
ENABLE_PROFILING_FILTER-STRINGS:INTERNAL=ALL;FIRST_INFERENCE
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[C:/Program Files/Git/cmd/git.exe][v2.43.0.windows.1()]
//Details about finding Python3
FIND_PACKAGE_MESSAGE_DETAILS_Python3:INTERNAL=[C:/Users/viswa/AppData/Local/Programs/Python/Python311/python.exe][C:/Users/viswa/AppData/Local/Programs/Python/Python311/libs/python311.lib][C:/Users/viswa/AppData/Local/Programs/Python/Python311/include][cfound components: Interpreter Development.Module ][v3.11.1()]
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[C:/Users/viswa/AppData/Local/Programs/Python/Python311/python.exe][v3.11.1()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Have symbol _strtof_l
FLATBUFFERS_HAS_STRTOF_L:INTERNAL=1
//Have symbol _strtoui64_l
FLATBUFFERS_HAS_STRTOULL_L:INTERNAL=1
FRONTEND_NAMES:INTERNAL=ir;onnx;pytorch;tensorflow;tensorflow_lite;paddle
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
GPU_AS_EXTENSION:INTERNAL=FALSE
GPU_CONFIG:INTERNAL=
GPU_PSEUDO_PLUGIN_FOR:INTERNAL=
//Test HAS_MSVC_GL_LTCG
HAS_MSVC_GL_LTCG:INTERNAL=1
//Test HAVE_ATTRIBUTE_ALWAYS_INLINE
HAVE_ATTRIBUTE_ALWAYS_INLINE:INTERNAL=
//Test HAVE_BUILTIN_CTZ
HAVE_BUILTIN_CTZ:INTERNAL=
//Test HAVE_BUILTIN_EXPECT
HAVE_BUILTIN_EXPECT:INTERNAL=
//Test HAVE_CLANG_MAVX
HAVE_CLANG_MAVX:INTERNAL=
//Test HAVE_CLANG_MBMI2
HAVE_CLANG_MBMI2:INTERNAL=
//Have symbol mmap
HAVE_FUNC_MMAP:INTERNAL=
//Have symbol sysconf
HAVE_FUNC_SYSCONF:INTERNAL=
//Have library lz4
HAVE_LIBLZ4:INTERNAL=
//Have library lzo2
HAVE_LIBLZO2:INTERNAL=
//Have library z
HAVE_LIBZ:INTERNAL=
//Have function secure_getenv
HAVE_SECURE_GETENV:INTERNAL=
//Have include sys/mman.h
HAVE_SYS_MMAN_H:INTERNAL=
//Have include sys/resource.h
HAVE_SYS_RESOURCE_H:INTERNAL=
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=
//Have include sys/uio.h
HAVE_SYS_UIO_H:INTERNAL=
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=
//Test HAVE_VISUAL_STUDIO_ARCH_AVX
HAVE_VISUAL_STUDIO_ARCH_AVX:INTERNAL=1
//Test HAVE_VISUAL_STUDIO_ARCH_AVX2
HAVE_VISUAL_STUDIO_ARCH_AVX2:INTERNAL=1
//Have include windows.h
HAVE_WINDOWS_H:INTERNAL=1
//Have function __secure_getenv
HAVE___SECURE_GETENV:INTERNAL=
HETERO_AS_EXTENSION:INTERNAL=FALSE
HETERO_CONFIG:INTERNAL=
HETERO_PSEUDO_PLUGIN_FOR:INTERNAL=
//ADVANCED property for variable: MSYS_CMD
MSYS_CMD-ADVANCED:INTERNAL=1
MULTI_AS_EXTENSION:INTERNAL=FALSE
MULTI_CONFIG:INTERNAL=
MULTI_PSEUDO_PLUGIN_FOR:INTERNAL=
NLOHMANN_JSON_CONFIG_INSTALL_DIR:INTERNAL=share/cmake/nlohmann_json
//Supported version of ONNX operator set
ONNX_OPSET_VERSION:INTERNAL=18
//Have symbol CL_VERSION_3_0
OPENCL_VERSION_3_0:INTERNAL=1
OV_CPACK_COMPONENTS_ALL:INTERNAL=tbb;tbb_dev;ir;onnx;pytorch;tensorflow;tensorflow_lite;paddle;multi;batch;hetero;cpu;gpu;core;core_dev;core_c;core_c_dev;pyopenvino_python3.11;openvino_req_files;cpp_samples;c_samples;python_samples;benchmark_app;ovc;openvino_dev_req_files;setupvars;licensing
//STRINGS property for variable: OV_CPU_ARM_TARGET_ARCH
OV_CPU_ARM_TARGET_ARCH-STRINGS:INTERNAL=
//ADVANCED property for variable: PKG_CONFIG_ARGN
PKG_CONFIG_ARGN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
PLUGIN_FILES:INTERNAL=MULTI:openvino_auto_plugin;AUTO:openvino_auto_plugin;BATCH:openvino_auto_batch_plugin;HETERO:openvino_hetero_plugin;CPU:openvino_intel_cpu_plugin;GPU:openvino_intel_gpu_plugin
//ADVANCED property for variable: PUGIXML_NO_EXCEPTIONS
PUGIXML_NO_EXCEPTIONS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PUGIXML_NO_STL
PUGIXML_NO_STL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PUGIXML_NO_XPATH
PUGIXML_NO_XPATH-ADVANCED:INTERNAL=1
PYBIND11_INCLUDE_DIR:INTERNAL=D:/OPENVINO/openvino/src/bindings/python/thirdparty/pybind11/include
//Python executable during the last CMake run
PYBIND11_PYTHON_EXECUTABLE_LAST:INTERNAL=C:/Users/viswa/AppData/Local/Programs/Python/Python311/python.exe
//Python debug status
PYTHON_IS_DEBUG:INTERNAL=0
PYTHON_MODULE_EXTENSION:INTERNAL=.cp311-win_amd64.pyd
//STRINGS property for variable: SELECTIVE_BUILD
SELECTIVE_BUILD-STRINGS:INTERNAL=ON;OFF;COLLECT
//Test SNAPPY_HAVE_BMI2
SNAPPY_HAVE_BMI2:INTERNAL=1
//Test SNAPPY_HAVE_NEON
SNAPPY_HAVE_NEON:INTERNAL=
//Test SNAPPY_HAVE_NEON_CRC32
SNAPPY_HAVE_NEON_CRC32:INTERNAL=
//Test SNAPPY_HAVE_NO_MISSING_FIELD_INITIALIZERS
SNAPPY_HAVE_NO_MISSING_FIELD_INITIALIZERS:INTERNAL=
//Test SNAPPY_HAVE_SSSE3
SNAPPY_HAVE_SSSE3:INTERNAL=1
//Test SNAPPY_HAVE_X86_CRC32
SNAPPY_HAVE_X86_CRC32:INTERNAL=1
//Test SUGGEST_OVERRIDE_SUPPORTED
SUGGEST_OVERRIDE_SUPPORTED:INTERNAL=
//STRINGS property for variable: THREADING
THREADING-STRINGS:INTERNAL=TBB;TBB_AUTO;SEQ;OMP
//Test UNUSED_BUT_SET_VARIABLE_SUPPORTED
UNUSED_BUT_SET_VARIABLE_SUPPORTED:INTERNAL=
VALIDATED_TARGETS:INTERNAL=
//ADVANCED property for variable: WGET_EXECUTABLE
WGET_EXECUTABLE-ADVANCED:INTERNAL=1
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=C:/Program Files (x86)/OpenVINO
//A list of OpenVINO Developer Package exported targets
_OPENVINO_DEVELOPER_PACKAGE_TARGETS:INTERNAL=pugixml-static;gflags_nothreads_static;nlohmann_json;openvino_itt;openvino_conditional_compilation;openvino_util;openvino_snippets;openvino_offline_transformations;openvino_reference;openvino_shape_inference;openvino_core_dev;openvino_runtime_s;openvino_runtime_dev;format_reader;ie_samples_utils;openvino_interpreter_backend
_Python:INTERNAL=Python3
//Compiler reason failure
_Python3_Compiler_REASON_FAILURE:INTERNAL=
_Python3_DEVELOPMENT_MODULE_SIGNATURE:INTERNAL=b19bc437af3563c4da280bd189e84597
//Development reason failure
_Python3_Development_REASON_FAILURE:INTERNAL=
_Python3_EXECUTABLE:INTERNAL=C:/Users/viswa/AppData/Local/Programs/Python/Python311/python.exe
//Path to a file.
_Python3_INCLUDE_DIR:INTERNAL=C:/Users/viswa/AppData/Local/Programs/Python/Python311/include
//Python3 Properties
_Python3_INTERPRETER_PROPERTIES:INTERNAL=Python;3;11;1;64;;cp311-win_amd64;;C:\Users\viswa\AppData\Local\Programs\Python\Python311\Lib;C:\Users\viswa\AppData\Local\Programs\Python\Python311\Lib;C:\Users\viswa\AppData\Local\Programs\Python\Python311\Lib\site-packages;C:\Users\viswa\AppData\Local\Programs\Python\Python311\Lib\site-packages
_Python3_INTERPRETER_SIGNATURE:INTERNAL=c23a68784182f15e8678da1daee4ae66
//Interpreter reason failure
_Python3_Interpreter_REASON_FAILURE:INTERNAL=
//Path to a library.
_Python3_LIBRARY_DEBUG:INTERNAL=_Python3_LIBRARY_DEBUG-NOTFOUND
//Path to a library.
_Python3_LIBRARY_RELEASE:INTERNAL=C:/Users/viswa/AppData/Local/Programs/Python/Python311/libs/python311.lib
//NumPy reason failure
_Python3_NumPy_REASON_FAILURE:INTERNAL=
//Path to a library.
_Python3_RUNTIME_LIBRARY_RELEASE:INTERNAL=C:/Users/viswa/AppData/Local/Programs/Python/Python311/python311.dll
//Argument for cpack_add_component for batch cpack component
_batch_cpack_component_args:INTERNAL=DISPLAY_NAME;BATCH runtime;DESCRIPTION;BATCH runtime;HIDDEN;DEPENDS;core
//Argument for cpack_add_component for benchmark_app cpack component
_benchmark_app_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for c_samples cpack component
_c_samples_cpack_component_args:INTERNAL=HIDDEN;DEPENDS;core_c_dev
//Argument for cpack_add_component for core_c cpack component
_core_c_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for core_c_dev cpack component
_core_c_dev_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for core cpack component
_core_cpack_component_args:INTERNAL=HIDDEN;DEPENDS;tbb
//Argument for cpack_add_component for core_dev cpack component
_core_dev_cpack_component_args:INTERNAL=HIDDEN;DEPENDS;core;tbb_dev
//Argument for cpack_add_component for cpp_samples cpack component
_cpp_samples_cpack_component_args:INTERNAL=HIDDEN;DEPENDS;core_dev
//Argument for cpack_add_component for cpu cpack component
_cpu_cpack_component_args:INTERNAL=DISPLAY_NAME;CPU runtime;DESCRIPTION;CPU runtime;DEPENDS;core
//Argument for cpack_add_component for gpu cpack component
_gpu_cpack_component_args:INTERNAL=DISPLAY_NAME;GPU runtime;DESCRIPTION;GPU runtime;DEPENDS;core
//Argument for cpack_add_component for hetero cpack component
_hetero_cpack_component_args:INTERNAL=DISPLAY_NAME;HETERO runtime;DESCRIPTION;HETERO runtime;HIDDEN;DEPENDS;core
//Argument for cpack_add_component for ir cpack component
_ir_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for licensing cpack component
_licensing_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for multi cpack component
_multi_cpack_component_args:INTERNAL=DISPLAY_NAME;MULTI runtime;DESCRIPTION;MULTI runtime;HIDDEN;DEPENDS;core
//Argument for cpack_add_component for onnx cpack component
_onnx_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for openvino_dev_req_files cpack
// component
_openvino_dev_req_files_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for openvino_req_files cpack
// component
_openvino_req_files_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for ovc cpack component
_ovc_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for paddle cpack component
_paddle_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for pyopenvino_python3.11 cpack
// component
_pyopenvino_python3.11_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for python_samples cpack component
_python_samples_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for pytorch cpack component
_pytorch_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for setupvars cpack component
_setupvars_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for tbb cpack component
_tbb_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for tbb_dev cpack component
_tbb_dev_cpack_component_args:INTERNAL=HIDDEN;DEPENDS;tbb
//Argument for cpack_add_component for tensorflow cpack component
_tensorflow_cpack_component_args:INTERNAL=HIDDEN
//Argument for cpack_add_component for tensorflow_lite cpack component
_tensorflow_lite_cpack_component_args:INTERNAL=HIDDEN
//ADVANCED property for variable: protobuf_DEBUG_POSTFIX
protobuf_DEBUG_POSTFIX-ADVANCED:INTERNAL=1
//Test protobuf_HAVE_LD_VERSION_SCRIPT
protobuf_HAVE_LD_VERSION_SCRIPT:INTERNAL=
//ADVANCED property for variable: protobuf_MODULE_COMPATIBLE
protobuf_MODULE_COMPATIBLE-ADVANCED:INTERNAL=1
protobuf_installed:INTERNAL=ON
protobuf_lite_installed:INTERNAL=ON
//True if pybind11 and all required components found on the system
pybind11_FOUND:INTERNAL=TRUE
//Directory where pybind11 headers are located
pybind11_INCLUDE_DIR:INTERNAL=D:/OPENVINO/openvino/src/bindings/python/thirdparty/pybind11/include
//Directories where pybind11 and possibly Python headers are located
pybind11_INCLUDE_DIRS:INTERNAL=D:/OPENVINO/openvino/src/bindings/python/thirdparty/pybind11/include;C:/Users/viswa/AppData/Local/Programs/Python/Python311/include

